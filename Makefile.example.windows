SCRIPTS = $(shell cd /d %cd% && echo %cd%\scripts)
PROJECT = $(shell cd /d %cd% && echo %cd%)
GO = go
OUTPUTS = $(shell cd /d %cd% && echo %cd%\deploy)
TAG ?= debug
LAMBDAS =

## 首次使用專案模版時, 必要執行一次
setup: 
	copy $(PROJECT)\config\config.go.example $(PROJECT)\config\debug_config.go
	rem copy $(PROJECT)\config\config.go.example $(PROJECT)\config\production_config.go
	copy $(PROJECT)\air.example.windows $(PROJECT)\.air.toml
	
## 映射遠端Ports至本地端Ports
ssh:
	go run -tags $(TAG) $(PROJECT)\tools\ssh\ssh.go

## 開發中
air:
	air

migration:
	go run -tags $(TAG) $(PROJECT)\tools\migration\migration.go

## by Fleet
format:
	goimports -w $(PROJECT)

## 以下由CI\CD人員維護!!!
$(LAMBDAS):
	GOOS=linux GOARCH=amd64 $(GO) build -tags $(TAG) -o "$(OUTPUTS)/$@" "cmd/lambda/$@.go"
	powershell -Command "Compress-Archive -Path '$(OUTPUTS)/$@' -DestinationPath '$(OUTPUTS)/$@.zip' -Force"

build-lambdas: $(LAMBDAS)

clean:
	rmdir /s /q "$(OUTPUTS)"

task:
	make clean
	make authority

changeLog:
	git-chglog > .\changeLog.md

update_lib:
	rem 建議安裝套件方式：scoop install golang-migrate golangci-lint protobuf
	go install github.com/swaggo/swag/cmd/swag@latest
	go install github.com/air-verse/air@latest
	go get -u ./...
	go mod tidy