SCRIPTS = $(shell pwd)/scripts
PROJECT = $(shell pwd)
GO = $(shell which go)
OUTPUTS = $(shell pwd)/deploy
TAG ?= debug

## 首次使用專案模版時, 必要執行一次
setup:
	cp $(PROJECT)/config/config.go.example $(PROJECT)/config/debug_config.go
	cp $(PROJECT)/config/config.go.example $(PROJECT)/config/production_config.go
	cp $(PROJECT)/air.example $(PROJECT)/.air.toml

## 映射遠端Ports至本地端Ports
ssh:
	go run -tags $(TAG) $(PROJECT)/tools/ssh/ssh.go

## 開發中
air:
	air

migration:
	go run -tags $(TAG) $(PROJECT)/tools/migration/migration.go

## by Fleet
format:
	goimports -w $(PROJECT)

## 以下由CI/CD人員維護!!!
authority:
	GOOS=linux GOARCH=amd64 $(GO) build -tags $(TAG) -o $(OUTPUTS)/authority cmd/lambda/authority.go
	zip -D -j -r $(OUTPUTS)/authority.zip $(OUTPUTS)/authority

clean:
	rm -rf $(OUTPUTS)

task:
	make clean
	make authority

changeLog:
	git-chglog > ./changeLog.md

update_lib:
	#brew install golang-migrate
	#brew install golangci-lint
	#brew install protobuf
	go get -u github.com/golang/protobuf/protoc-gen-go
	# path: /opt/homebrew/bin/golangci-lint
	go install github.com/swaggo/swag/cmd/swag@latest
	go install github.com/cosmtrek/air@latest
	go get -u
	go get -u ...